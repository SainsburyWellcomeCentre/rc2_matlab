if exist('analysis')
    try
        close(analysis.f.Number)
    end
end
clear analysis

analysis.bin_fname = 'C:\Users\Margrie_Lab1\Documents\raw_data\CAA-1122976\CAA-1122976_e44_einterleaving5pb_PassiveRotationInDarkness.bin';

[analysis.timebase,analysis.signal,analysis.online_data] = LickingData_Reading(analysis.bin_fname);
analysis.sampling_rate = 10000;
analysis.timeout = 5;
analysis.output.total_time=analysis.timebase(end);                  % total time
try
    analysis.output.n_rewards_given=analysis.online_data.n_rewards_given;    % total licking triggered rewards
catch
end
analysis.lick_threshold = 2.0;
if isfield(analysis.online_data,'analysis.lick_threshold')
    analysis.lick_threshold = analysis.online_data.analysis.lick_threshold;
end
analysis.reward_threshold = 4;
analysis.lickDetect_trigger_threshold = 4;
analysis.idx.lick = zeros(1,length(analysis.timebase));
analysis.idx.pump = zeros(1,length(analysis.timebase));
analysis.idx.trigger = zeros(1,length(analysis.timebase));
for i=2:length(analysis.timebase)
    if length(analysis.lick_threshold)==1
        if analysis.signal.lick_signal(i-1)<analysis.lick_threshold & analysis.signal.lick_signal(i)>=analysis.lick_threshold
            analysis.idx.lick(i)=1;
        end
    elseif length(analysis.lick_threshold)==2
        if analysis.signal.lick_signal(i-1)<analysis.lick_threshold(1) & analysis.signal.lick_signal(i)>=analysis.lick_threshold(1) & analysis.signal.lick_signal(i)<=analysis.lick_threshold(2)
            analysis.idx.lick(i)=1;
        end
    end
    if analysis.signal.pump_signal(i-1)<analysis.reward_threshold & analysis.signal.pump_signal(i)>=analysis.reward_threshold
        analysis.idx.pump(i)=1;
    end
    if analysis.signal.LickDetect_trigger_signal(i-1)<analysis.lickDetect_trigger_threshold & analysis.signal.LickDetect_trigger_signal(i)>=analysis.lickDetect_trigger_threshold
        analysis.idx.trigger(i)=1;
    end
end
analysis.timestamp.lick = find(analysis.idx.lick==1)/analysis.sampling_rate;     % licking timestamps
analysis.timestamp.reward = find(analysis.idx.pump==1)/analysis.sampling_rate;   % reward timestamps
analysis.timestamp.trigger = find(analysis.idx.trigger==1)/analysis.sampling_rate;   % reward timestamps
analysis.output.n_licking=length(analysis.timestamp.lick);          % total licking
try
    analysis.output.n_rewards_manually=length(analysis.timestamp.reward)-analysis.online_data.n_rewards_given;   % manually given rewards
catch
end

try
    analysis.output.n_trials = length(analysis.online_data.response);

    for j = 1:length(unique(analysis.online_data.stimulus_typeid))
        analysis.trial.stimulus_type{j}.trialidx = find(analysis.online_data.stimulus_typeid==j);
    end
    for j = 1:ceil(length(unique(analysis.online_data.stimulus_typeid))/2-1)
        analysis.trial.s_plus{j}.trialidx = [analysis.trial.stimulus_type{j*2-1}.trialidx analysis.trial.stimulus_type{j*2}.trialidx];
    end
    analysis.trial.s_minus.trialidx = [find(analysis.online_data.stimulus_typeid==length(unique(analysis.online_data.stimulus_typeid))-1) find(analysis.online_data.stimulus_typeid==length(unique(analysis.online_data.stimulus_typeid)))];
    
    analysis.temp.n_s_plus_trialidxs = [];
    for j = 1:length(analysis.trial.s_plus)
        analysis.temp.n_s_plus_trialidxs = [analysis.temp.n_s_plus_trialidxs analysis.trial.s_plus{j}.trialidx];
    end
    analysis.output.n_s_plus_trials = length(analysis.temp.n_s_plus_trialidxs);
    analysis.output.n_s_minus_trials = length(analysis.trial.s_minus.trialidx);
    % n correct trials (s_plus s_minus)
    for j = 1:length(analysis.trial.s_plus)
        analysis.output.n_correct_trials_s_plus(j) = sum(analysis.online_data.response(analysis.trial.s_plus{j}.trialidx));
    end
    analysis.output.n_correct_trials_s_minus = sum(analysis.online_data.response(analysis.trial.s_minus.trialidx));
    % accuracy
    analysis.output.accuracy_s_plus = sum(analysis.output.n_correct_trials_s_plus)/analysis.output.n_s_plus_trials;
    analysis.output.accuracy_s_minus = analysis.output.n_correct_trials_s_minus/analysis.output.n_s_minus_trials;
    analysis.output.accuracy = analysis.output.accuracy_s_plus;
    if analysis.output.n_s_minus_trials~=0
	    analysis.output.accuracy = (analysis.output.accuracy_s_plus*analysis.output.n_s_plus_trials+analysis.output.accuracy_s_minus*analysis.output.n_s_minus_trials)/(analysis.output.n_s_plus_trials+analysis.output.n_s_minus_trials);
    end
    % n correct trials (ccw cw)
    for j = 1:length(unique(analysis.online_data.stimulus_typeid))
        analysis.output.n_correct_trials_stimulus_type(j) = sum(analysis.online_data.response(analysis.trial.stimulus_type{j}.trialidx));
    end
    analysis.output.n_correct_all = [   analysis.output.n_correct_trials_s_plus analysis.output.n_correct_trials_s_minus;...
                                        analysis.output.n_correct_trials_stimulus_type(1:2:end);
                                        analysis.output.n_correct_trials_stimulus_type(2:2:end) ];
    % latency
    analysis.trial.latency = NaN(1,analysis.output.n_trials);
    for i = 1:analysis.output.n_trials 
        analysis.trial.validlicking{i} = find(analysis.timestamp.lick>analysis.timestamp.trigger(i) & analysis.timestamp.lick<analysis.timestamp.trigger(i)+analysis.timeout);
        if ~isempty(analysis.trial.validlicking{i})
            analysis.trial.latency(i) = analysis.timestamp.lick(min(analysis.trial.validlicking{i}))-analysis.timestamp.trigger(i);
        end
    end
    [~,analysis.temp.typeididx] = sort(analysis.online_data.stimulus_typeid);
    for i = 1:analysis.output.n_trials
        analysis.latencytable.stimulus_type{i,1} = analysis.online_data.stimulus_type{analysis.temp.typeididx(i)};
        analysis.latencytable.latency(i,1) = analysis.trial.latency(analysis.temp.typeididx(i));
    end
    s_plus_type = analysis.latencytable.stimulus_type(1:analysis.output.n_trials/2);
    s_minus_type = analysis.latencytable.stimulus_type(analysis.output.n_trials/2+1:end);
    latency = analysis.latencytable.latency;
    analysis.output.latencytable = table(s_plus_type,latency(1:analysis.output.n_trials/2),);
    clear stimulus_type latency
catch
%     %{
    if isfield(analysis.online_data,'response') & isfield(analysis.online_data,'stimulus_type')
        analysis.output.n_trials = length(analysis.online_data.response);
        for i = 1:analysis.output.n_trials
            analysis.trial.s_plus80(i) = contains(analysis.online_data.stimulus_type(i),'80');
            analysis.trial.s_plus70(i) = contains(analysis.online_data.stimulus_type(i),'70');
            analysis.trial.s_plus60(i) = contains(analysis.online_data.stimulus_type(i),'60');
            analysis.trial.s_plus50(i) = contains(analysis.online_data.stimulus_type(i),'50');
            analysis.trial.s_plus40(i) = contains(analysis.online_data.stimulus_type(i),'40');
            analysis.trial.s_plus30(i) = contains(analysis.online_data.stimulus_type(i),'30');
            analysis.trial.s_plus20(i) = contains(analysis.online_data.stimulus_type(i),'20');
            analysis.trial.s_minus(i) = contains(analysis.online_data.stimulus_type(i),'minus');
            analysis.trial.ccw80(i) = contains(analysis.online_data.stimulus_type(i),'L') & contains(analysis.online_data.stimulus_type(i),'80');
            analysis.trial.cw80(i) = contains(analysis.online_data.stimulus_type(i),'R') & contains(analysis.online_data.stimulus_type(i),'80');
            analysis.trial.ccw70(i) = contains(analysis.online_data.stimulus_type(i),'L') & contains(analysis.online_data.stimulus_type(i),'70');
            analysis.trial.cw70(i) = contains(analysis.online_data.stimulus_type(i),'R') & contains(analysis.online_data.stimulus_type(i),'70');
            analysis.trial.ccw60(i) = contains(analysis.online_data.stimulus_type(i),'L') & contains(analysis.online_data.stimulus_type(i),'60');
            analysis.trial.cw60(i) = contains(analysis.online_data.stimulus_type(i),'R') & contains(analysis.online_data.stimulus_type(i),'60');
            analysis.trial.ccw50(i) = contains(analysis.online_data.stimulus_type(i),'L') & contains(analysis.online_data.stimulus_type(i),'50');
            analysis.trial.cw50(i) = contains(analysis.online_data.stimulus_type(i),'R') & contains(analysis.online_data.stimulus_type(i),'50');
            analysis.trial.ccw40(i) = contains(analysis.online_data.stimulus_type(i),'L') & contains(analysis.online_data.stimulus_type(i),'40');
            analysis.trial.cw40(i) = contains(analysis.online_data.stimulus_type(i),'R') & contains(analysis.online_data.stimulus_type(i),'40');
            analysis.trial.ccw30(i) = contains(analysis.online_data.stimulus_type(i),'L') & contains(analysis.online_data.stimulus_type(i),'30');
            analysis.trial.cw30(i) = contains(analysis.online_data.stimulus_type(i),'R') & contains(analysis.online_data.stimulus_type(i),'30');
            analysis.trial.ccw20(i) = contains(analysis.online_data.stimulus_type(i),'L') & contains(analysis.online_data.stimulus_type(i),'20');
            analysis.trial.cw20(i) = contains(analysis.online_data.stimulus_type(i),'R') & contains(analysis.online_data.stimulus_type(i),'20');
            analysis.trial.ccw_minus(i) = contains(analysis.online_data.stimulus_type(i),'L') & contains(analysis.online_data.stimulus_type(i),'minus');
            analysis.trial.cw_minus(i) = contains(analysis.online_data.stimulus_type(i),'R') & contains(analysis.online_data.stimulus_type(i),'minus');
        end
        analysis.trialidx.s_plus80 = find(analysis.trial.s_plus80==1);
        analysis.trialidx.s_plus70 = find(analysis.trial.s_plus70==1);
        analysis.trialidx.s_plus60 = find(analysis.trial.s_plus60==1);
        analysis.trialidx.s_plus50 = find(analysis.trial.s_plus50==1);
        analysis.trialidx.s_plus40 = find(analysis.trial.s_plus40==1);
        analysis.trialidx.s_plus30 = find(analysis.trial.s_plus30==1);
        analysis.trialidx.s_plus20 = find(analysis.trial.s_plus20==1);
        
        analysis.output.n_s_plus_trials = sum([length(analysis.trialidx.s_plus80) length(analysis.trialidx.s_plus70) length(analysis.trialidx.s_plus60) length(analysis.trialidx.s_plus50) length(analysis.trialidx.s_plus40) length(analysis.trialidx.s_plus30) length(analysis.trialidx.s_plus20)]);
        analysis.trialidx.s_minus = find(analysis.trial.s_minus==1);
        analysis.output.n_s_minus_trials = length(analysis.trialidx.s_minus);
        
        analysis.output.n_correct_s_plus80_trials = sum(analysis.online_data.response(analysis.trialidx.s_plus80));
        analysis.output.n_correct_s_plus70_trials = sum(analysis.online_data.response(analysis.trialidx.s_plus70));
        analysis.output.n_correct_s_plus60_trials = sum(analysis.online_data.response(analysis.trialidx.s_plus60));
        analysis.output.n_correct_s_plus50_trials = sum(analysis.online_data.response(analysis.trialidx.s_plus50));
        analysis.output.n_correct_s_plus40_trials = sum(analysis.online_data.response(analysis.trialidx.s_plus40));
        analysis.output.n_correct_s_plus30_trials = sum(analysis.online_data.response(analysis.trialidx.s_plus30));
        analysis.output.n_correct_s_plus20_trials = sum(analysis.online_data.response(analysis.trialidx.s_plus20));
        analysis.output.n_correct_s_minus_trials = sum(analysis.online_data.response(analysis.trialidx.s_minus));
        
        analysis.output.accuracy_s_plus = sum([analysis.output.n_correct_s_plus80_trials analysis.output.n_correct_s_plus70_trials analysis.output.n_correct_s_plus60_trials analysis.output.n_correct_s_plus50_trials analysis.output.n_correct_s_plus40_trials analysis.output.n_correct_s_plus30_trials analysis.output.n_correct_s_plus20_trials])/analysis.output.n_s_plus_trials;
        analysis.output.accuracy_s_minus = analysis.output.n_correct_s_minus_trials/analysis.output.n_s_minus_trials;
        analysis.output.accuracy = analysis.output.accuracy_s_plus;
        if analysis.output.n_s_minus_trials~=0
    	    analysis.output.accuracy = (analysis.output.accuracy_s_plus*analysis.output.n_s_plus_trials+analysis.output.accuracy_s_minus*analysis.output.n_s_minus_trials)/(analysis.output.n_s_plus_trials+analysis.output.n_s_minus_trials);
        end
        
        analysis.trialidx.ccw80 = find(analysis.trial.ccw80==1);
        analysis.trialidx.ccw70 = find(analysis.trial.ccw70==1);
        analysis.trialidx.ccw60 = find(analysis.trial.ccw60==1);
        analysis.trialidx.ccw50 = find(analysis.trial.ccw50==1);
        analysis.trialidx.ccw40 = find(analysis.trial.ccw40==1);
        analysis.trialidx.ccw30 = find(analysis.trial.ccw30==1);
        analysis.trialidx.ccw20 = find(analysis.trial.ccw20==1);
        analysis.trialidx.ccw_minus = find(analysis.trial.ccw_minus==1);
    %     analysis.output.n_ccw80_trials = length(analysis.trialidx.ccw80);
        analysis.trialidx.cw80 = find(analysis.trial.cw80==1);
        analysis.trialidx.cw70 = find(analysis.trial.cw70==1);
        analysis.trialidx.cw60 = find(analysis.trial.cw60==1);
        analysis.trialidx.cw50 = find(analysis.trial.cw50==1);
        analysis.trialidx.cw40 = find(analysis.trial.cw40==1);
        analysis.trialidx.cw30 = find(analysis.trial.cw30==1);
        analysis.trialidx.cw20 = find(analysis.trial.cw20==1);
        analysis.trialidx.cw_minus = find(analysis.trial.cw_minus==1);
    %     analysis.output.n_cw80_trials = length(analysis.trialidx.cw80);
        analysis.output.n_correct_ccw80_trials = sum(analysis.online_data.response(analysis.trialidx.ccw80));
        analysis.output.n_correct_cw80_trials = sum(analysis.online_data.response(analysis.trialidx.cw80));
        analysis.output.n_correct_ccw70_trials = sum(analysis.online_data.response(analysis.trialidx.ccw70));
        analysis.output.n_correct_cw70_trials = sum(analysis.online_data.response(analysis.trialidx.cw70));
        analysis.output.n_correct_ccw60_trials = sum(analysis.online_data.response(analysis.trialidx.ccw60));
        analysis.output.n_correct_cw60_trials = sum(analysis.online_data.response(analysis.trialidx.cw60));
        analysis.output.n_correct_ccw50_trials = sum(analysis.online_data.response(analysis.trialidx.ccw50));
        analysis.output.n_correct_cw50_trials = sum(analysis.online_data.response(analysis.trialidx.cw50));
        analysis.output.n_correct_ccw40_trials = sum(analysis.online_data.response(analysis.trialidx.ccw40));
        analysis.output.n_correct_cw40_trials = sum(analysis.online_data.response(analysis.trialidx.cw40));
        analysis.output.n_correct_ccw30_trials = sum(analysis.online_data.response(analysis.trialidx.ccw30));
        analysis.output.n_correct_cw30_trials = sum(analysis.online_data.response(analysis.trialidx.cw30));
        analysis.output.n_correct_ccw20_trials = sum(analysis.online_data.response(analysis.trialidx.ccw20));
        analysis.output.n_correct_cw20_trials = sum(analysis.online_data.response(analysis.trialidx.cw20));
        analysis.output.n_correct_ccw_minus_trials = sum(analysis.online_data.response(analysis.trialidx.ccw_minus));
        analysis.output.n_correct_cw_minus_trials = sum(analysis.online_data.response(analysis.trialidx.cw_minus));
        analysis.output.n_correct_all = [analysis.output.n_correct_s_plus80_trials,analysis.output.n_correct_s_plus70_trials,analysis.output.n_correct_s_plus60_trials,analysis.output.n_correct_s_plus50_trials,analysis.output.n_correct_s_plus40_trials,analysis.output.n_correct_s_plus30_trials,analysis.output.n_correct_s_plus20_trials,analysis.output.n_correct_s_minus_trials; ...
                                         analysis.output.n_correct_ccw80_trials,   analysis.output.n_correct_ccw70_trials,   analysis.output.n_correct_ccw60_trials,   analysis.output.n_correct_ccw50_trials,   analysis.output.n_correct_ccw40_trials,   analysis.output.n_correct_ccw30_trials,   analysis.output.n_correct_ccw20_trials,   analysis.output.n_correct_ccw_minus_trials; ... 
                                         analysis.output.n_correct_cw80_trials,    analysis.output.n_correct_cw70_trials,    analysis.output.n_correct_cw60_trials,    analysis.output.n_correct_cw50_trials,    analysis.output.n_correct_cw40_trials,    analysis.output.n_correct_cw30_trials,    analysis.output.n_correct_cw20_trials,    analysis.output.n_correct_cw_minus_trials];
    end
    %}
end

% %{
try         % raster plotting
    %%%%%%%  Parameters for Rasters    %%%%%%%%%%%%%%%%%%%%
    analysis.rasters.spike_line_width=1;         %%%放电raster线条的宽度
    analysis.rasters.raster_color=[255 0 0; 255 127 0; 255 255 0; 0 255 0; 0 0 255; 75 0 130; 148 0 211; 255*0.6 255*0.6 255*0.6];        %%%放电raster的颜色 [R G B]
    analysis.rasters.spikeHeight=0.8;              %%%
    analysis.rasters.graph_length=1000;        %%%整个图的长度（单位：点子数）,此时刚好，spike和LFP的长度为1000点
    analysis.rasters.graph_height=600;         %%%整个图的高度（单位：点子数）,此时如果LFPHeight=0.4,则LFP高度为500*0.4=200个点，如果spikeHeight=0.3,则spike高度为500*0.3个点
    analysis.rasters.t0=[-15.5 15.5];
    analysis.rasters.h=0.015;
    analysis.bin=0.5;
    analysis.binleft=analysis.rasters.t0(1):analysis.bin:analysis.rasters.t0(2);
    
    analysis.rasters.spkref = analysis.timestamp.trigger;
    analysis.t1=analysis.rasters.spkref+analysis.rasters.t0(1)-0.0005;
    analysis.t2=analysis.rasters.spkref+analysis.rasters.t0(2)+0.0005;
    analysis.count=zeros(1,length(analysis.binleft));
    analysis.f=figure;   % figure 1 
    analysis.n_lickingtrials = 0;

    for j=1:1:length(analysis.rasters.spkref)
        analysis.rasters.spk=analysis.timestamp.lick;
        analysis.rasters.spk(analysis.rasters.spk>analysis.t2(j)|analysis.rasters.spk<analysis.t1(j))=[];
        if size(analysis.rasters.spk,1)==0 | size(analysis.rasters.spk,2)==0
            continue
        else
            analysis.rasters.trial(j).perieventTs=analysis.rasters.spk-analysis.rasters.spkref(j);
            for k=1:1:length(analysis.rasters.spk)
                x=floor((analysis.rasters.spk(k)-analysis.t1(j))/analysis.bin)+1;
                if x<=size(analysis.count,2)
                analysis.count(1,x)=analysis.count(1,x)+1;
                end
                    subplot('position',[0.13,0.95-analysis.rasters.h*j,0.6702668680765358,analysis.rasters.h]);  % figure 1 rasters
                    analysis.rasters.spike_color=analysis.rasters.raster_color(8,:);
                    for i = 1:length(analysis.trial.stimulus_type)-2
                        if ismember(j,analysis.trial.stimulus_type{i}.trialidx)
                            analysis.rasters.spike_color=analysis.rasters.raster_color(ceil(i/2),:);
                        end
                    end
                    
                    plot(analysis.rasters.trial(j).perieventTs(k)*ones(1,2),[0 1],'color',analysis.rasters.spike_color/255,'linewidth',analysis.rasters.spike_line_width);
                    hold on;
    
            end
            if ~isempty(analysis.rasters.trial(j).perieventTs)
                analysis.n_lickingtrials = analysis.n_lickingtrials+1;
            end
        end
        axis([analysis.rasters.t0(1) analysis.rasters.t0(2) 0 1]);
    %     set(gca,'xtick',[],'ytick',[],'box','off','xcolor',[1 1 1],'ycolor',[1 1 1]);
    %     set(get(gca,'parent'),'color',[1 1 1],'paperunits','points','paperposition',[0 0 analysis.rasters.graph_length analysis.rasters.graph_height]);
        axis off
    
    %         T=analysis.t1(j):analysis.bin:analysis.t2(j);
    %         for l=1:length(T)-1
    %             adtime=time_AD;
    %             adtime(adtime>T(l+1)|adtime<T(l))=[];
    %             ad=interp1(time_AD,AD,adtime);
    %             adFR(j,l)=mean(ad);
    %         end
    end
        
    analysis.firingrate=analysis.count/(length(analysis.rasters.spkref)*analysis.bin);
    analysis.firingrate=analysis.firingrate(1:length(analysis.binleft))';
    
    subplot('position',[0.13,0.3,0.6702668680765358,0.25]);  % figure 1 histograms
    analysis.p=bar(analysis.binleft,analysis.firingrate);
    set(get(analysis.p,'parent'),'box','off');
    set(get(gca,'children'),'edgecolor',[0/255 0/255 0/255],'facecolor',[0/255 0/255 0/255]);  %'edgecolor'bar描边颜色，'facecolor'bar填充颜色
    set(gca,'xlim',[analysis.rasters.t0(1) analysis.rasters.t0(2)],'box','off','xcolor',[0 0 0],'ycolor',[0 0 0]);
    set(gca,'tickdir','out') % 坐标轴刻度向外
    
    analysis.output.analysis.n_lickingtrials = analysis.n_lickingtrials;
catch
    %%%%%%%  Parameters for Rasters    %%%%%%%%%%%%%%%%%%%%
    analysis.rasters.spike_line_width=1;         %%%放电raster线条的宽度
    analysis.rasters.raster_color=[255 0 0; 255 127 0; 255 255 0; 0 255 0; 0 0 255; 75 0 130; 148 0 211; 255*0.6 255*0.6 255*0.6];        %%%放电raster的颜色 [R G B]
    analysis.rasters.spikeHeight=0.8;              %%%
    analysis.rasters.graph_length=1000;        %%%整个图的长度（单位：点子数）,此时刚好，spike和LFP的长度为1000点
    analysis.rasters.graph_height=600;         %%%整个图的高度（单位：点子数）,此时如果LFPHeight=0.4,则LFP高度为500*0.4=200个点，如果spikeHeight=0.3,则spike高度为500*0.3个点
    analysis.rasters.t0=[-15.5 15.5];
    analysis.rasters.h=0.015;
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    analysis.bin=0.5;
    analysis.binleft=analysis.rasters.t0(1):analysis.bin:analysis.rasters.t0(2);
    
    analysis.rasters.spkref = analysis.timestamp.trigger;
    analysis.t1=analysis.rasters.spkref+analysis.rasters.t0(1)-0.0005;
    analysis.t2=analysis.rasters.spkref+analysis.rasters.t0(2)+0.0005;
    analysis.count=zeros(1,length(analysis.binleft));
    analysis.f=figure;   % figure 1 
    analysis.n_lickingtrials = 0;
    for j=1:1:length(analysis.rasters.spkref)
        analysis.rasters.spk=analysis.timestamp.lick;
        analysis.rasters.spk(analysis.rasters.spk>analysis.t2(j)|analysis.rasters.spk<analysis.t1(j))=[];
        if size(analysis.rasters.spk,1)==0 | size(analysis.rasters.spk,2)==0
            continue
        else
            analysis.rasters.trial(j).perieventTs=analysis.rasters.spk-analysis.rasters.spkref(j);
            for k=1:1:length(analysis.rasters.spk)
                x=floor((analysis.rasters.spk(k)-analysis.t1(j))/analysis.bin)+1;
                if x<=size(analysis.count,2)
                analysis.count(1,x)=analysis.count(1,x)+1;
                end
                    subplot('position',[0.13,0.95-analysis.rasters.h*j,0.6702668680765358,analysis.rasters.h]);  % figure 1 rasters
                    analysis.rasters.spike_color=analysis.rasters.raster_color(8,:);
                    if analysis.trial.s_plus80(j)==1
                        analysis.rasters.spike_color=analysis.rasters.raster_color(1,:);
                    elseif analysis.trial.s_plus70(j)==1
                        analysis.rasters.spike_color=analysis.rasters.raster_color(2,:);
                    elseif analysis.trial.s_plus60(j)==1
                        analysis.rasters.spike_color=analysis.rasters.raster_color(3,:);
                    elseif analysis.trial.s_plus50(j)==1
                        analysis.rasters.spike_color=analysis.rasters.raster_color(4,:);
                    elseif analysis.trial.s_plus40(j)==1
                        analysis.rasters.spike_color=analysis.rasters.raster_color(5,:);
                    elseif analysis.trial.s_plus30(j)==1
                        analysis.rasters.spike_color=analysis.rasters.raster_color(6,:);
                    elseif analysis.trial.s_plus20(j)==1
                        analysis.rasters.spike_color=analysis.rasters.raster_color(7,:);
                    end
                    plot(analysis.rasters.trial(j).perieventTs(k)*ones(1,2),[0 1],'color',analysis.rasters.spike_color/255,'linewidth',analysis.rasters.spike_line_width);
                    hold on;
    
            end
            if ~isempty(analysis.rasters.trial(j).perieventTs)
                analysis.n_lickingtrials = analysis.n_lickingtrials+1;
            end
        end
        axis([analysis.rasters.t0(1) analysis.rasters.t0(2) 0 1]);
    %     set(gca,'xtick',[],'ytick',[],'box','off','xcolor',[1 1 1],'ycolor',[1 1 1]);
    %     set(get(gca,'parent'),'color',[1 1 1],'paperunits','points','paperposition',[0 0 analysis.rasters.graph_length analysis.rasters.graph_height]);
        axis off
    
    %         T=analysis.t1(j):analysis.bin:analysis.t2(j);
    %         for l=1:length(T)-1
    %             adtime=time_AD;
    %             adtime(adtime>T(l+1)|adtime<T(l))=[];
    %             ad=interp1(time_AD,AD,adtime);
    %             adFR(j,l)=mean(ad);
    %         end
    end
        
    analysis.firingrate=analysis.count/(length(analysis.rasters.spkref)*analysis.bin);
    analysis.firingrate=analysis.firingrate(1:length(analysis.binleft))';
    
    subplot('position',[0.13,0.3,0.6702668680765358,0.25]);  % figure 1 histograms
    analysis.p=bar(analysis.binleft,analysis.firingrate);
    set(get(analysis.p,'parent'),'box','off');
    set(get(gca,'children'),'edgecolor',[0/255 0/255 0/255],'facecolor',[0/255 0/255 0/255]);  %'edgecolor'bar描边颜色，'facecolor'bar填充颜色
    set(gca,'xlim',[analysis.rasters.t0(1) analysis.rasters.t0(2)],'box','off','xcolor',[0 0 0],'ycolor',[0 0 0]);
    set(gca,'tickdir','out') % 坐标轴刻度向外
    
    analysis.output.analysis.n_lickingtrials = analysis.n_lickingtrials;
end

clear i j k x;
clc
[analysis.filepath,analysis.filename,analysis.fileext]=fileparts(analysis.bin_fname);
fprintf(['\n' analysis.filename '\n']);
analysis.output.n_correct_all
try
    analysis.output.latencytable
catch
end
%}